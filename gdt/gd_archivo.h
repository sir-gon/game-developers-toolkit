// Class automatically generated by Dev-C++ New Class wizard

#ifndef GD_ARCHIVO_H
#define GD_ARCHIVO_H

#include "gd_sistema.h"
/*
 * Leer y escribir Archivos
 */
class GD_Archivo
{
	public:
		// class constructor
		GD_Archivo();
		// class destructor
		~GD_Archivo();
		
		IFileSystem* FileSystem;
		
		bool bEscribir; // True si es escribir y False si es Leer
		
		IWriteFile* writeFile;
		IReadFile* readFile;
		
		void AbrirParaEscribir(const char *strArchivo, bool bContinuar = false);
		void AbrirParaLeer(const char *strArchivo);
		void Cerrar(void);
		
		void Escribir(const char *strCadena, int bytes);
        void Leer(char *buffer, int bytes);
        
        // Defines para Escribir estructuras. FUNCIONAN!!!
        // El primer parámetro es la estructura, y el segundo el tipo.
        #define EscribirEstructura(estructura, tipo) writeFile->write( reinterpret_cast<char *>(&estructura), sizeof(tipo));
        #define LeerEstructura(estructura, tipo) readFile->read( reinterpret_cast<char *>(&estructura), sizeof(tipo));
        
        int Bytes(void);
		
		bool CambiarPosicion(int posicion, bool bRelativo = false);
		int Posicion(void);
		
		const char *NombreArchivo(void);
};

#endif // GD_ARCHIVO_H
